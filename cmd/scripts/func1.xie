// 本例展示一般函数调用的方法
// 通过$inputL和$outL堆栈来传入并传出参数
// This example shows the method of general function calls
// Pass in and out parameters through the $inputL and $outL stacks

// 将变量s赋值为一个多行字符串
// Assign the variable s to a multiline string
assign $s ` ab c123 天然
森林 `

// 输出变量s中的值作为为参考
// Print the value in the variable s for reference
plv $s

// 调用函数func1
// call指令后第一个参数为函数返回值，函数标号后的参数为输入参数，可以为0个、1个或多个
// 这些参数将以数组的形式传入到函数内的局部变量$inputL中
// Call function func1
// The first parameter after the call instruction is the function return value, and the parameters after the function label are the input parameters, which can be 0, 1, or more
// These parameters will be passed as an array into the local variable $inputL within the function
call $rs :func1 $s

// 再次输出变量s中的值
// Output the value in the variable s again
plv $rs

// 调用函数func2
// Call the function func2
call $rs :func2 $s

// 再次输出变量s中的值
// Output the value in the variable s again
plv $rs

// 终止代码执行
// Terminate code execution
exit

// 函数func1
// Function func1
:func1
    // 获取$inputL中的第一项，及我们传入的参数s
    // Get the first item in $inputL and the parameters we passed in, s
    getArrayItem $strL $inputL 0

    // 将变量strL中的字符串做trim操作
    // 结果存入变量outL中，这是约定的函数返回值的变量
    // Trim the string in variable strL
    // The result is stored in the variable outL, which is the default variable returned by the function
    trim $outL $strL

    // 函数返回
    // Function return
    ret

// 函数func2
// Function func2
:func2
    // 获取$inputL中的第一项，及我们传入的参数s
    // Get the first item in $inputL and the parameters we passed in, s
    getArrayItem $strL $inputL 0

    // 将变量strL中的字符串做trim操作
    // 结果存入变量outL中，这是约定的函数返回值的变量
    // Trim the string in variable strL
    // The result is stored in the variable rsL
    trim $rsL $strL

    // 函数返回时，如果ret指令后面带有一个参数，将被自动存入$outL中，达到函数返回值的目的
    // When a function returns, if the ret instruction is followed by a parameter, it will be automatically stored in $outL to achieve the purpose of returning the value of the function
    ret $rsL
