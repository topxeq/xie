// assign float values to variabe $a and $b
assign $a #f1.6
assign $b #f2.8

// call function from label 'func1'
// and get the return result in variabe $rs
// the callFunction should return result in local variable $outL, or use instruction "ret" with a paramter for it
call $rs :func1

pln "function result:" $rs

// output all the 4 variables after calling function :func1
pln $a $b $c $d

// terminate the program
exit

// function 'func1'
:func1
    // output all the 4 variables for reference
    pln $a $b $c $d

    // add $a and float value 0.9, put the result again to $a
    add $a $a #f0.9

    // define a local variable with the same name $b as the global one(but they are completely different variables)
    var $b

    // assign an integer value 9 to local variable $b
    assign $b #i9

    // increase the number of local $b by 1
    inc $b

    // assing a string value 'abc' to variable $c, also a local variable since not declared in global context
    = $c `abc`

    // explicitly declare a global variabe $d
    global $d

    // assign a bool value 'true' to global variable $d
    = $d #btrue

    // output all the 4 variables for reference
    pln $a $b $c $d

    // return from the function call, with a result value "done"
    ret "done"