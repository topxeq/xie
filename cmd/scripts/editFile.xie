// 本例演示通过SSH连接直接编辑服务器上的文件
// 用法：xie sshEdit.xie -host=youdomain.com -pass=password -remotePath=/root/a1.bin
// 注意使用时将上面参数中的内容替换为自己的实际内容

getSwitch $filePathT $argsG "-file=" ""

trim $filePathT $filePathT

var $textT str ""

ifEmpty $filePathT :+1 :next1
    mt $rs1 $guiG getConfirm "请选择……（please select...）" "文件路径为空，是否创建新文件？（file not exists, create a new file for edit?）"

    ifNot $rs1 :+1 :+2
        exit

    mt $rs2 $guiG selectFileToSave -confirmOverwrite -title="新建文件……（new file...）" -default=test.txt `-filter=[{"Name":"All files", "Patterns":["*.*"], "CaseFold":true}]`

    ifNilOrEmpty $rs2 :+1 :+2
        fatalf "未选择文件（no file selected）"

    = $filePathT $rs2

    goto :next2

:next1
loadText $textT $filePathT 

ifErrX $textT :+1 :+2
    fatalf "载入文件内容失败（failed to load file content）"

:next2

getResource $tmps "js/tkc.js"

adds $htmlT `
<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <title>编辑文件（edit file）……</title>
    <script>TX_tkc.js_XT</script>
</head>
<body style="font-size: 16px;">
	<div style="margin-top: 10px;">
		<label for="remotePathID" >文件路径（file path）： </label><input id="filePathID" type="text" readonly />
	</div>
	<div style="margin-top: 10px; text-align: center;">
		<textarea id="mainTextArea" style="width: calc(100% - 10px); height: 80vh; font-size: 16px;"></textarea>
	</div>
	<div style="margin-top: 10px;">
		<button id="btnLoadID" cmd="reload">重新载入（reload）</button>
		<button id="btnSaveID" cmd="save">保存（save）</button>
		<button id="btnSaveAsID" cmd="saveAs">另存为（saveAs）……</button>
		<button id="btnClose">关闭（close）</button>
	</div>

    <script type="text/javascript">
        function showMsg(titleA, textA) {
            // Window.this.modal(<alert caption={titleA}>{textA}</alert>);
        }

        function setFilePath(pathA) {
            document.getElementById("filePathID").value = tkc.hexDecode(pathA);
        }

        function setTextValue(textA) {
            console.log("textA", textA);
            document.getElementById("mainTextArea").value = tkc.hexDecode(textA);
        }

        function sendCmd(e, senderA) {
            // var rs = Window.this.xcall("delegateDo", JSON.stringify({"cmd": senderA.getAttribute("cmd"), "text": document.getElementById("mainTextArea").value}));

            // showMsg("命令执行结果", rs);
            var cmdT = e.target.getAttribute("cmd").trim();

            console.log(cmdT);

            if (cmdT == "save") {
                var rs = quickDelegateDo(JSON.stringify({cmd: cmdT, value: document.getElementById("mainTextArea").value}));

                rs.then(res => {
                    alert(res);
                });
        
                return;
            } else if (cmdT == "saveAs") {
                var rs = quickDelegateDo(JSON.stringify({cmd: cmdT, value: document.getElementById("mainTextArea").value}));

                rs.then(res => {
                    // alert(res);
                    if (res.startsWith("TXERROR:")) {
                        alert(res.substring(8));
                        return;
                    }

                    document.getElementById("filePathID").value = res;
                });
        
                return;
            }

            var rs = quickDelegateDo(JSON.stringify({cmd: cmdT}));

            rs.then(res => {
                console.log(res);
                if (res != "") {
                    alert(res);
                }
            });
        }

        function closeWindow() {
            quickDelegateDo(JSON.stringify({cmd: "close"}));
        }

        document.addEventListener('DOMContentLoaded', function() {
            document.getElementById("btnClose").addEventListener("click", closeWindow);

            document.getElementById("btnLoadID").addEventListener("click", sendCmd);
            document.getElementById("btnSaveID").addEventListener("click", sendCmd);
            document.getElementById("btnSaveAsID").addEventListener("click", sendCmd);

            quickDelegateDo(JSON.stringify({cmd: "init"}));

        }, false);

    </script>
</body>
</html>
`
strReplace $htmlT $htmlT "TX_tkc.js_XT" $tmps

// 新建窗口，第二个参数传入了JSON格式的表示左、上、宽、高的窗口位置与大小的字符串
// 但实际上由于下面调用了TiScript中的moveToCenter函数，因此将会使这里定义的宽和高无效
mt $windowT $guiG newWindow "-title=编辑文件（edit file）" -width=640 -height=480 -center -debug

// mt $rs $windowT call setRemotePath $remotePathT
// mt $rs $windowT call setTextValue $textT

// 创建并设定与界面之间的快速代理对象
new $dele1 quickDelegate :deleFast1 :deleFast1End

plo $dele1
mt $rs $windowT setQuickDelegate $dele1

mt $rs $windowT setHtml $htmlT

// 运行图形界面
mt $rs $windowT show

pl "showWindowResult: %v" $rs

exit

// 快速代理对象的代码
// 用于在WEB图形界面GUI中回调函数
:deleFast1

    getArrayItem $inputT $inputL 0

    pl "inputT: %v" $inputT

    fromJson $cmdObjT $inputT

    {} $cmdT $cmdObjT "cmd" ""
    {} $valueT $cmdObjT "value" ""

    pl "cmd: %T(%v) %v %v" $cmdT $cmdT @`$cmdT == "save"` $textT

    if @`$cmdT == "init"` :+1 :inext1
        pln "init"
        
        hexEncode $tmps1 $filePathT

        spr $tmps2 `setFilePath('%v')` $tmps1
        
        plo $tmps2
        
        mt $rs $windowT eval $tmps2
        plo $rs

        loadText $fcT $filePathT    
        hexEncode $tmps1 $fcT
        spr $tmps2 `setTextValue('%v')` $tmps1
        
        mt $rs $windowT eval $tmps2

        exitL

    :inext1
    if @`$cmdT == "save"` :+1 :inext2
        pln "save text"
        
        saveText $rs1 $valueT $filePathT   

        ifErrX $rs1 :+1 :inextErr1
            spr $rs "保存失败（failed to save）：%v" $rs1
            exitL $rs
        
        :inextErr1
            exitL "保存完毕（successfully saved）"

    :inext2
    if @`$cmdT == "saveAs"` :+1 :inext3
        pln "saveAs"

        spr $tmps1 -default=%v $filePathT
        
        mt $rs2 $guiG selectFileToSave -confirmOverwrite -title="另存为（save as）……" $tmps1 `-filter=[{"Name":"All files", "Patterns":["*.*"], "CaseFold":true}]`

        ifNilOrEmpty $rs2 :+1 :+2
            exitL "TXERROR:未选择文件（no file selected）"
    
        = $filePathT $rs2
    
        saveText $rs1 $valueT $filePathT   

        ifErrX $rs1 :+1 :inextErr2
            spr $rs "TXERROR:另存失败（failed to save）：%v" $rs1
            exitL $rs
        
        :inextErr2
            exitL $filePathT

    :inext3
    if @`$cmdT == "reload"` :+1 :inext4
        pln "reload text"
        
        loadText $fcT $filePathT    
        hexEncode $tmps1 $fcT
        spr $tmps2 `setTextValue('%v')` $tmps1
        
        mt $rs $windowT eval $tmps2

        exitL ""

    :inext4
    if @`$cmdT == "close"` :+1 :inext5
        pln "close window"
        
        mt $rs $windowT close

        exitL ""

    :inext5
    if @`$cmdT == "prints"` :+1 :inextn
        {} $tmps $cmdObjT "value" ""

        pln $tmps

        exitL ""

    :inextn
    pln 未知命令

    exitL "未知命令（unknown command）"

:deleFast1End
    exitL
