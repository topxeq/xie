// 本例演示使用随机落点法计算圆周率Pi时将落点即时画在图形界面上
// 使用HTML5中的画布（canvas）对象来实现

// 初始化随机数发生器
randomize

// 新建窗口
guiNewWindow $w "-title=圆周率计算（Cal Pi）" -width=640 -height=480 -center -debug

// 如果出错则停止执行
checkErrX $w

// 计算圆周率Pi将单启动一个线程来进行计算
// 因此需要将窗口对象传入该线程以便后续使用绘图功能
// 这里采用全局共享映射来进行传递
setSharedMapItem window $w

// 调用窗口对象的setDelegate方法来指定图形界面的代理函数
= $code1 `
    // 通过inputG来获取传入参数
    getArrayItem $cmdT $inputG 0

    // 处理start命令
    ifEqual $cmdT "start" :+1 :inext1

        // 启动线程进行圆周率计算
        goCall $rs ~~~
            getSharedMapItem $w1 window $nilG

            var $count int 0

            = $inCircleCount #i0

            :for1
                ++ $count

                getRandomInt $x -100 100
                getRandomInt $y -100 100

                ifEval '(($x * $x) + ($y * $y)) <= #i10000' :+1 :nexti1
                    inc $inCircleCount
                    spr $tmps "drawPoint(%v, %v)" $x $y
                    mt $rs $w1 eval $tmps
                    goto :nexti2
                :nexti1
                    spr $tmps "drawPoint(%v, %v, true)" $x $y
                    mt $rs $w1 eval $tmps

                :nexti2

                ifEval '($count % #i100) == #i0' :+1 :nexti3
                    eval $pi '#f4.0 * {convert $inCircleCount float} / {toFloat $count}'

                    spr $tmps "setPiText(%v)" $pi
                    mt $rs $w1 eval $tmps

                :nexti3
                sleep 0.001
            
                goto :for1
        ~~~

        = $outG "started"

        exit

    :inext1
    ifEqual $cmdT "pl" :+1 :inext2
        getArrayItem $formatT $inputG 1

        slice $list1 $inputG 2 -

        pl $formatT $list1...

        = $outG ""

        exit

    :inext2
    pl "unknown command: %v" $cmdT

    spr $outG "unknown command: %v" $cmdT

    exit
`

strReplace $code1 $code1 ~~~ $backQuoteG

mt $rs $w setDelegate $code1 $w

pl "set dele: %v" $rs

= $htmlT `
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<script>
    var ctxG;

	window.onload = function (){
        var canvas = document.getElementById('mainCanvasId');
        ctxG = canvas.getContext('2d');

        ctxG.strokeStyle = "rgb(0,0,0)";
        ctxG.beginPath();
        ctxG.arc(100, 100, 100, 0, 2 * Math.PI);
        ctxG.closePath();
        ctxG.stroke();

        ctxG.setLineDash([20, 5]);
        ctxG.strokeStyle = "rgb(200,0,0)";
        ctxG.strokeRect(0, 0, 200, 200);

        // drawPoint(150, 150, false);
        // drawPoint(10, 20, true);
	};

    function drawPoint(x, y, red) {
        if (!red) {
            ctxG.fillStyle = "rgb(0,0,0)";
        } else {
            ctxG.fillStyle = "rgb(200,0,0)";
        }

        ctxG.fillRect(x+100,y+100,1,1);
    }

    function setPiText(v) {
        var piTextSpan = document.getElementById('piTextId');

        piTextSpan.innerHTML = "圆周率（Pi） = " + v;
    }

	function start() {
        console.log("start...");
        delegateDo("start");
	}
</script>
</head>
<body>
<div id="div1" style="margin-top: 1.0em; text-align: center;">
	<button onclick="javascript:start();">开始绘制<br>（start drawing）</button>
</div>
<div id="div2" style="margin-top: 1.0em; text-align: center;">
    <span id="piTextId">圆周率（Pi） = </span>
</div>
<div id="div3" style="margin-top: 1.0em; text-align: center;">
    <canvas id="mainCanvasId" width="200" height="200"></canvas>
</div>
</body>
</html>
`

mt $rs $w setHtml $htmlT

checkErrX $rs

mt $rs $w show

checkErrX $rs

mt $rs $w close

exit


