// 本例演示用call指令调用函数时传递参数并接受返回值
// 调用递归法计算斐波那契序列数的函数，传入参数整数18，返回结果变量$rs并将其输出
// use function inputL and outL for input and output
// and cal Fibonacci numbers(the 18th) by recursive function

call $rs :fib #i18
pln $rs

exit

:fib
    // 声明局部变量
    // 否则在递归调用时发生冲突
    // define local variables
    // if not, may be confused with the up level function in the recursion
    var $n1
    var $outL
    var $rs1
    var $rs2

    getArrayItem $n1 $inputL 0

    < $tmpL $n1 #i2

    if $tmpL :label1

    :else
        dec $n1
        call $rs1 :fib $n1

        dec $n1
        call $rs2 :fib $n1

        add $outL $rs1 $rs2

        ret

    :label1
        ret $n1

