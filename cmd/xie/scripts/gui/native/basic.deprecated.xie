// 创建主窗口，参数分别是窗口标题、宽度、高度、样式
// 样式可以是整数0, 1, 2, 4, 8, 16或其任意组合相加后的值，注意整数要用#i引导
// 分别代表无样式、不可改变大小、最大化、浮动、无边框、透明
// 也可以用下面的字符串代表，关键字包含otResiz、aximiz、float、rameless、ransparent即可
guiNewWindow $win1 测试GUI 400 200 "notResizable|frameless"

// 设置一个用于文字标签label1所用的字符串
// 由于本例中将修改该标签的值，因此需要设置该GUI变量
guiSetVar label1 请输入一个整数：

// 类似label1，定义用于按钮1显示的文字变量
guiSetVar button1Text 点击 

// 新建一个用于存储文本输入框内容的变量
// 类型类似于其他语言中的*string
// guiNewVar创建的变量，需要用guiGetVarByRef和guiSetVarByRef来进行读写
guiNewVar inputText1 str

// 按钮1点击后的回调函数
guiNewFunc $func1 `
    // 获取输入框中的文字
    guiGetVarByRef $r1 inputText1 str

    // 连接字符串
    add $r2 您输入了： $r1

    // 设置标签1的文字
    guiSetVar label1 $r2

`

// 按钮2的回调函数，将退出图形界面
guiNewFunc $func2 `
    // guiCloseWindow指令用于退出退出界面，将继续执行下面的代码
    guiCloseWindow
`

// 运行窗口消息循环，启动界面
guiRunLoop $win1 :loop1

// 图形界面退出后可以继续执行其他代码
pln "继续执行一些代码……"

exit

// 主界面窗口消息循环体代码
// 通过不断刷新提现界面的变化
:loop1
    // 定义一个可变的文字标签
    // 如果不需可变文字，则可以使用guiStaticLabel指令
    guiLabel $label1 label1 

    // 定义一个文本输入框，宽度200，同时设置提示文字
    guiInput $input1 inputText1 -width=200 -hint=在此输入任意字符串……

    // 定义两个按钮
    // 如果不需改变文字，则可以使用guiStaticButton指令
    guiButton $button1 button1Text $func1
    guiStaticButton $button2 关闭 $func2

    guiRow $row1 $button1 $button2

    guiSpacing $space1 0 10

    guiLayout $drop window $label1 $space1 $input1 $space1 $row1

    guiLoopRet