// 给变量a赋值为整数12
assign $a #i12

// 计算表达式 a+(a+12+26) 的值，结果存入tmp
// 注意，表达式元素之间必须以空格分隔开
// 一般的表达式都存在空格，因此需要用反引号或双引号括起来
eval "$a + ( $a + #i12 + #i26 )"

// 输出tmp值查看
pln $tmp

// 将变量b赋值为整数-9
assign $b #i-9

// 计算顺序括号优先，无括号时严格按照从左到右（注意不是乘除比加减优先等）
// 表达式中的值与运算符之间必须有空格分隔
// 结果值放入变量r
// 本例要计算的表达式的数学表达是 a+((a-12.0)*abs(b))，其中abs表示取绝对值
// 注意由于计算顺序问题，数学表达中需要把a-12.0加上括号以保证计算顺序一致
// 如果括号里的内容以一个问号“?”开始，那么后面可以是一条指令
// 该指令必须通过$tmp变量返回一个结果值继续参加表达式的运算，这样可以使得表达式中实现基本运算符之外的运算功能，例如转换数值类型等。
eval $r `$a + ( $a - (?convert #f12.0 int) * (? abs $b) )`

// 输出变量r的值查看
pln $r

// 判断表达式 !((a-b)<10) 的计算结果值是否为布尔值true，是则跳转到标号next1处
// ifEval指令后第一个参数必须是一个字符串类型的数值或变量，表示要计算的表达式
// 第二个参数时满足条件后要跳转到的标号
ifEval `! (($a - $b) < #i10)` :next1

pln 条件不满足
exit

:next1
pln 条件满足